[project]
name = "road-to-billions"
version = "3"
description = "Some experimentations around trading with Python and Binance"
keywords = ["python", "trading", "binance", "cryptocurrency"]
readme = { file = "README.md", content-type = "text/markdown" }
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.13"
]
authors = [
    { name = "Anthony Gelibert", email = "anthony.gelibert@me.com" },
    { name = "Camille Francon", email = "camille.francon@carbonbee.fr" },
    { name = "Jérémy Olivier", email = "jeremy.olivier30@gmail.com" }
]
requires-python = "~=3.13.0"
dependencies = [
    "binance-connector~=3.11",
    "click~=8.1",
    "pandas~=2.2",
    "plotly~=6.0",
    "pydantic~=2.10",
    "rich~=13.9",
    "ta~=0.11",
]

[dependency-groups]
dev = [
    "ruff~=0.11",
]

[project.urls]
Repository = "https://github.com/anthonygelibert/road_to_billions.git"
Issues = "https://github.com/anthonygelibert/road_to_billions/issues"

[tool.ruff]
line-length = 120
target-version = "py313"
output-format = "concise"

[tool.ruff.lint]
allowed-confusables = ["’"]
# By default, enable *all* lint rules.
select = ["ALL"]
# Enable *preview* to allow “experimental” rules.
preview = true
# Source: https://docs.astral.sh/ruff/rules
#    B024: flake8-bugbear        — Checks for abstract classes without abstract methods.
#    D107: pydocstyle            — Missing docstring in __init__.
#    D203: pydocstyle            — 1 blank line required before class docstring.
#    D212: pydocstyle            — Multi-line docstring summary should start at the first line.
#  FIX002: flake8-fixme          — Line contains TODO, consider resolving the issue.
#    G004: flake8-logging-format — Checks for uses of f-strings to format logging messages.
#    S101: flake8-bandit         — Use of assert detected.
#    T201: flake8-print          — print found.
#  TID252: flake8-tidy-imports   — Checks for relative imports.
ignore = ["B024", "D107", "D203", "D212", "FIX002", "G004", "S101", "T201", "TID252"]
# Add some ignores that shouldn’t be in the “regular” list but are useful.
#    CPY: flake8-copyright    — Ignore **EVERYTHING**.
#    DOC: pydoclint           — Ignore **EVERYTHING**.
extend-ignore = ["CPY", "DOC"]

[tool.ruff.lint.isort]
no-lines-before = ["local-folder"]
order-by-type = false
relative-imports-order = "closest-to-furthest"
